{"version":3,"file":"static/js/50.26011d8b.chunk.js","mappings":"kPAiDA,MA3CA,YAAmC,IAAbA,EAAY,EAAZA,SAClB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAiBA,OACI,0BACI,kBAAMH,SAbO,SAAAI,GACjBA,EAAMC,iBAEDH,GAKLF,EAASE,GACTC,EAAgB,KALZG,EAAAA,GAAAA,KAAW,0BAMlB,EAGO,WACI,mBAAQC,KAAK,SAAb,UACI,iBAAMC,UAAU,eAAhB,UACI,SAAC,MAAD,SAGR,kBACID,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SA5BY,SAAAR,GACxBD,EAAgBC,EAAMS,cAAcC,MAAMC,OAAOC,cACpD,EA2BeF,MAAOZ,QAK1B,C,0LCxCYe,EAAUC,EAAAA,GAAAA,QAAH,2EAKPC,EAAOD,EAAAA,GAAAA,GAAH,mHAOJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,iQ,6BCPJI,EAAeC,EAAQ,MAAhCC,QA4ER,EA1EmB,WACf,OAAoCvB,EAAAA,EAAAA,UAAS,IAA7C,eAAOwB,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOzB,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAO2B,EAAP,KAAeC,EAAf,KACMC,EAAc5B,EAAa6B,IAAI,SAC/BC,GAAWC,EAAAA,EAAAA,MA2CjB,OArCAC,EAAAA,EAAAA,YAAU,WACN,GAAoB,KAAhBJ,GAAsC,OAAhBA,EAA1B,CAGA,IAAMK,EAAS,mCAAG,iGACdN,GAAU,GADI,kBAIWO,MAAM,2GAAD,OACqFN,EADrF,+BAJhB,cAIJO,EAJI,gBAOSA,EAAOC,OAPhB,OAOJC,EAPI,QASFC,EAAYD,EAAZC,SAEKC,QACTnC,EAAAA,GAAAA,MACI,2QAIFoC,EAASF,EAAQG,KAAI,kBAA6B,CACpDC,GADuB,EAAGA,GAE1BC,eAFuB,EAAOA,eAAP,IAK3BnB,EAAcgB,GAtBJ,kDAwBVpC,EAAAA,GAAAA,MAAY,wIAxBF,yBA0BVuB,GAAU,GA1BA,6EAAH,qDA8BfM,GA/BC,CAgCJ,GAAE,CAACL,KAGA,UAACb,EAAD,YACI,SAACK,EAAD,CAAYtB,SA3CK,SAAA8C,GACrB3C,EAAgB,CAAE4C,MAAOD,GAC5B,IA0CQlB,IAAU,SAACoB,EAAA,EAAD,IACY,IAAtBvB,EAAWgB,SAAiBb,IACzB,SAACT,EAAD,UACKM,EAAWkB,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACnB,OACI,yBACI,UAACzB,EAAD,CACI6B,MAAO,CAAEC,KAAMlB,GACfmB,GAAE,kBAAaP,GAFnB,UAIK,KACD,SAAC,MAAD,IACCC,MAPAD,EAWhB,QAKpB,C","sources":["components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviePage.styled.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { BsSearch } from 'react-icons/bs';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport propTypes from 'prop-types';\n\nfunction SearchForm({ onSubmit }) {\n    const [searchParams, setSearchParams] = useState('');\n\n    const handleRequestChange = event => {\n        setSearchParams(event.currentTarget.value.trim().toLowerCase());\n    };\n\n    const handleSubmin = event => {\n        event.preventDefault();\n\n        if (!searchParams) {\n            toast.warn('Enter search parameters');\n            return;\n        }\n\n        onSubmit(searchParams);\n        setSearchParams('');\n    };\n    return (\n        <div>\n            <form onSubmit={handleSubmin}>\n                <button type=\"submit\">\n                    <span className=\"button-label\">\n                        <BsSearch />\n                    </span>\n                </button>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search images and photos\"\n                    onChange={handleRequestChange}\n                    value={searchParams}\n                />\n            </form>\n        </div>\n    );\n}\n\nSearchForm.propTypes = {\n    onSubmit: propTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n    padding-top: 25px;\n    padding-bottom: 25px;\n`;\n\nexport const List = styled.ul`\n    padding: 0;\n    list-style-type: none;\n    margin-top: 20px;\n    max-width: 400px;\n`;\n\nexport const ListLink = styled(Link)`\n    text-decoration: none;\n    color: black;\n    display: flex;\n    align-items: center;\n    &:focus {\n        color: red;\n        font-weight: 500;\n    }\n    &:hover {\n        color: red;\n        font-weight: 500;\n    }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Section, List, ListLink } from './MoviePage.styled';\nimport { BiFilm } from 'react-icons/bi';\nimport Loader from 'components/Loader';\n\nconst { default: SearchForm } = require('components/SearchForm');\n\nconst MoviesPage = () => {\n    const [moviesList, setMoviesList] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [loader, setLoader] = useState(false);\n    const searchQuery = searchParams.get('query');\n    const location = useLocation();\n\n    const handleFormSubmit = sParams => {\n        setSearchParams({ query: sParams });\n    };\n\n    useEffect(() => {\n        if (searchQuery === '' || searchQuery === null) {\n            return;\n        }\n        const fetchData = async () => {\n            setLoader(true);\n\n            try {\n                const result = await fetch(\n                    `https://api.themoviedb.org/3/search/movie?api_key=58f452bc794f10dc7b9a5ba94d5a1bbe&language=en-US&query=${searchQuery}&page=1&include_adult=true`\n                );\n                const data = await result.json();\n\n                const { results } = data;\n\n                if (!results.length) {\n                    toast.error(\n                        'Попробуйте использовать другой запрос для поиска'\n                    );\n                }\n\n                const movies = results.map(({ id, original_title }) => ({\n                    id,\n                    original_title,\n                }));\n\n                setMoviesList(movies);\n            } catch (err) {\n                toast.error('Ошибка! Что-то пошло не так');\n            } finally {\n                setLoader(false);\n            }\n        };\n\n        fetchData();\n    }, [searchQuery]);\n\n    return (\n        <Section>\n            <SearchForm onSubmit={handleFormSubmit} />\n            {loader && <Loader />}\n            {moviesList.length !== 0 && !loader && (\n                <List>\n                    {moviesList.map(({ id, original_title }) => {\n                        return (\n                            <li key={id}>\n                                <ListLink\n                                    state={{ from: location }}\n                                    to={`/movies/${id}`}\n                                >\n                                    {' '}\n                                    <BiFilm />\n                                    {original_title}\n                                </ListLink>\n                            </li>\n                        );\n                    })}\n                </List>\n            )}\n        </Section>\n    );\n};\n\nexport default MoviesPage;\n"],"names":["onSubmit","useState","searchParams","setSearchParams","event","preventDefault","toast","type","className","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","trim","toLowerCase","Section","styled","List","ListLink","Link","SearchForm","require","default","moviesList","setMoviesList","useSearchParams","loader","setLoader","searchQuery","get","location","useLocation","useEffect","fetchData","fetch","result","json","data","results","length","movies","map","id","original_title","sParams","query","Loader","state","from","to"],"sourceRoot":""}